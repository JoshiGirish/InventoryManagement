:py:mod:`InvManage.views.consumer_views`
========================================

.. py:module:: InvManage.views.consumer_views


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   InvManage.views.consumer_views.create_consumer_view
   InvManage.views.consumer_views.update_consumer_view
   InvManage.views.consumer_views.delete_consumer_view
   InvManage.views.consumer_views.display_consumers_view
   InvManage.views.consumer_views.get_consumer



.. py:function:: create_consumer_view(request)

   Creates a consumer on ``POST`` request, and returns a consumer creation form on ``GET`` request.

   .. http:get:: /consumer

       Gets the consumer creation form.

       **Example request**:

       .. sourcecode:: http

           GET /consumer/ HTTP/1.1
           Host: localhost:8000
           Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9


       **Example response**:

       .. sourcecode:: http

           HTTP/1.1 200 OK
           Vary: Accept
           Content-Type: text/html; charset=utf-8

       :reqheader Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
       :statuscode 200: Consumer creation form received successfully.

   .. http:post:: /consumer

       Creates a consumer.

       **Example request**:

       .. sourcecode:: http

           POST /consumer/ HTTP/1.1
           Host: localhost:8000
           Content-Type: multipart/form-data;

       :form consumer-name: ``The Music Store``

       :form consumer-identifier: ``CONS1256``

       :form consumer-gstin: ``89ACC654654335``

       :form consumer-phone: ``+91 6543525422``

       :form consumer-address: ``Plot no. 958, N-4, Neo Complex, Barh, Wokha, Nagaland, 797111``

       :form consumer-email: ``johnDoe@themusic.store``

       :form consumer-location: ``Wokha``

       :resheader Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLTR88aZAnBUSE7mv
       :statuscode 302: Redirects to ``/consumer``.



.. py:function:: update_consumer_view(request)

   Updates a consuemr on ``POST`` request and returns the consumer update form for ``GET`` request.

   .. http:get:: /consumer/update

       Gets the consumer update form whose primary key matches the query parameter ``pk``.

       **Example request**:

       .. sourcecode:: http

           GET /consumer/update HTTP/1.1
           Host: localhost:8000
           Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9

       :query pk: The primary key of the consumer.

       **Example response**:

       .. sourcecode:: http

           HTTP/1.1 200 OK
           Vary: Accept
           Content-Type: text/html; charset=utf-8

       :reqheader Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
       :statuscode 200: Consumer update form received successfully.

   .. http:post:: /consumer/update

       Updates the consumer.

       **Example request**:

       .. sourcecode:: http

           POST /company/update HTTP/1.1
           Host: localhost:8000
           Content-Type: multipart/form-data;

       :form pk: ``7``

       :form consumer-name: ``The Music Store``

       :form consumer-identifier: ``CONS1256``

       :form consumer-gstin: ``89ACC654654335``

       :form consumer-phone: ``+91 6543525422``

       :form consumer-address: ``Plot no. 958, N-4, Neo Complex, Barh, Wokha, Nagaland, 797111``

       :form consumer-email: ``johnDoe@themusic.store``

       :form consumer-location: ``Wokha``

       :resheader Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLTR88aZAnBUSE7mv
       :statuscode 302: Redirects to ``/consumer``.



.. py:function:: delete_consumer_view(request, pk)

   Deletes the consumer with primary key ``pk`` on ``POST`` request.

   .. http:post:: /consumer/<str:object_id>/delete

       Deletes the consumer represented by the primary key ``object_id``.

       **Example request**:

       .. sourcecode:: http

           POST /consumer/5/delete HTTP/1.1
           Host: localhost:8000
           Content-Type: application/x-www-form-urlencoded

       :param object_id: Consumer primary key.
       :resheader Content-Type: application/x-www-form-urlencoded
       :statuscode 302: Redirects to ``/consumer``.
       :statuscode 500: Consumer matching query does not exist.



.. py:function:: display_consumers_view(request)

   Retrieves the list of consumers on ``GET`` request.

   .. http:get:: /consumers/

       Gets the list of all consumers.

       **Example request**:

       .. sourcecode:: http

           GET /companies/ HTTP/1.1
           Host: localhost:8000
           Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9

       :form page: The page number of the consumers list.

       **Example response**:

       .. sourcecode:: http

           HTTP/1.1 200 OK
           Vary: Accept
           Content-Type: text/html; charset=utf-8

       :reqheader Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
       :statuscode 200: List of consumers received successfully.


.. py:function:: get_consumer(request)

   Returns the ``JSON`` serialized data of the requested consumer on ``GET`` request.

   .. http:get:: /get_consumer/

       Gets the JSON serialized data of the requested consumer.

       **Example request**:

       .. sourcecode:: http

           GET /get_consumer/ HTTP/1.1
           Host: localhost:8000
           Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9

       **Example response**:

       .. sourcecode:: http

           HTTP/1.1 200 OK
           Vary: Accept
           Content-Type: application/json; charset=utf-8

           [
               {
                   "name": "The Music Store",
                   "identifier": "CONS1256",
                   "gstin": "89AAC4633353643",
                   "phone": "+91 8325642358",
                   "address": "Plot no 958, N- 4, Neo Complex, Barh, Wokha, Nagaland, 797111",
                   "email": "JohnDoe@themusic.store",
                   "location": "Wokha"
               }
           ]

       :resheader Content-Type: application/json
       :statuscode 200: List of consumers received successfully.
       :statuscode 400: Bad request version
       :statuscode 500: Consumer matching query does not exist.


